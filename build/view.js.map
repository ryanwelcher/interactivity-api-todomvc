{"version":3,"file":"view.js","mappings":"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","sources":["webpack://to-do-mvc/external module \"@wordpress/interactivity\"","webpack://to-do-mvc/webpack/bootstrap","webpack://to-do-mvc/webpack/runtime/make namespace object","webpack://to-do-mvc/./src/view.js"],"sourcesContent":["var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * WordPress dependencies\n */\nimport { store, getElement, getContext } from '@wordpress/interactivity';\n\n// import apiFetch from '@wordpress/api-fetch'; // Won't work.\n// const apiFetch = wp.apiFetch;\n\nconst enterKeyCode = 13;\nconst { state } = store( 'to-dos', {\n\tstate: {\n\t\ttoDos: [],\n\t\tget hasToDos() {\n\t\t\treturn state.toDos.length > 0;\n\t\t},\n\t\tget toDosLeft() {\n\t\t\treturn state.toDos.filter( ( toDo ) => ! toDo.completed ).length;\n\t\t},\n\t\tget hasCompletedTodos() {\n\t\t\treturn state.toDos.some( ( toDo ) => toDo.completed );\n\t\t},\n\t\tget capsSalutation() {\n\t\t\treturn getContext().item.toLocaleUpperCase();\n\t\t},\n\t},\n\tactions: {\n\t\tonKeyDown: ( e ) => {\n\t\t\tswitch ( e.keyCode ) {\n\t\t\t\tcase enterKeyCode: {\n\t\t\t\t\t//??\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\t// Gets the element that is bound to the action.\n\t\t\t\t\tconst { ref } = getElement();\n\t\t\t\t\t// Add the new to-do to the list.\n\t\t\t\t\tstate.toDos.push( {\n\t\t\t\t\t\tid: state.toDos.length + 1,\n\t\t\t\t\t\ttext: ref.value,\n\t\t\t\t\t\tcompleted: false,\n\t\t\t\t\t} );\n\t\t\t\t\t// Clear the input field.\n\t\t\t\t\tref.value = '';\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ttoggleCompleted: () => {\n\t\t\tconst {\n\t\t\t\tref: {\n\t\t\t\t\tdataset: { id },\n\t\t\t\t},\n\t\t\t} = getElement();\n\n\t\t\tstate.toDos = state.toDos.map( ( toDo ) => {\n\t\t\t\tif ( toDo.id === parseInt( id ) ) {\n\t\t\t\t\ttoDo.completed = ! toDo.completed;\n\t\t\t\t}\n\t\t\t\treturn toDo;\n\t\t\t} );\n\t\t},\n\t\tclearCompletedTodos: () => {\n\t\t\tstate.toDos = state.toDos.filter( ( toDo ) => ! toDo.completed );\n\t\t},\n\n\t\tmarkAllComplete: () => {\n\t\t\tconst allCompleted = state.toDos.every(\n\t\t\t\t( toDo ) => toDo.completed\n\t\t\t);\n\t\t\tstate.toDos = state.toDos.map( ( toDo ) => {\n\t\t\t\ttoDo.completed = ! allCompleted;\n\t\t\t\treturn toDo;\n\t\t\t} );\n\t\t},\n\t\tdeleteTodo: () => {\n\t\t\tconst {\n\t\t\t\tref: {\n\t\t\t\t\tdataset: { id },\n\t\t\t\t},\n\t\t\t} = getElement();\n\n\t\t\tstate.toDos = state.toDos.filter(\n\t\t\t\t( toDo ) => toDo.id !== parseInt( id )\n\t\t\t);\n\t\t},\n\t},\n\tcallbacks: {},\n} );\n\n/**\n * Helper to log the data in a readable format. Useful for debugging parts of the store.\n *\n * Use console.log for non-store values.\n *\n * @param {*} data\n * @returns\n */\nconst debugLog = ( data ) =>\n\tconsole.log( JSON.parse( JSON.stringify( data ) ) );\n"],"names":["store","getElement","getContext","enterKeyCode","state","toDos","hasToDos","length","toDosLeft","filter","toDo","completed","hasCompletedTodos","some","capsSalutation","item","toLocaleUpperCase","actions","onKeyDown","e","keyCode","preventDefault","ref","push","id","text","value","toggleCompleted","dataset","map","parseInt","clearCompletedTodos","markAllComplete","allCompleted","every","deleteTodo","callbacks","debugLog","data","console","log","JSON","parse","stringify"],"sourceRoot":""}